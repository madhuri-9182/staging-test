# Generated by Django 5.1.2 on 2025-01-07 13:12

import django.core.validators
import django.db.models.deletion
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0006_alter_organization_slug'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Candidate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('year', models.PositiveSmallIntegerField(default=0, help_text='candidate experience total year')),
                ('month', models.PositiveBigIntegerField(default=0, help_text='candidate experience total month')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='IN')),
                ('email', models.EmailField(blank=True, max_length=255)),
                ('company', models.CharField(blank=True, max_length=100)),
                ('designation', models.CharField(blank=True, max_length=100)),
                ('source', models.CharField(blank=True, help_text='From Which side this candidate is ?', max_length=100)),
                ('cv', models.FileField(upload_to='candidate_cvs')),
                ('remark', models.TextField(blank=True, max_length=255, null=True)),
                ('specialization', models.CharField(blank=True, max_length=100)),
                ('status', models.CharField(blank=True, choices=[('REC', 'Recommended'), ('NREC', 'Not Recommended'), ('SCH', 'Schedule'), ('NSCH', 'Not Schedule')], default='NSCH', help_text='candidate interview status', max_length=15)),
                ('reason_for_dropping', models.CharField(blank=True, choices=[('CNI', 'Candidate Not Interested'), ('CNA', 'Candidate Not Available'), ('CNR', 'Candidate Not Respond'), ('OTH', 'Others')], max_length=100)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('total_score', models.PositiveSmallIntegerField(default=0)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='candidate', to='organizations.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('designation', models.CharField(blank=True, max_length=100, null=True)),
                ('status', models.CharField(blank=True, choices=[('ACT', 'Active'), ('INACT', 'Inactive'), ('PEND', 'Pending')], default='PEND', help_text='verification status', max_length=15)),
                ('invited_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invited_by_clientuser', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientuser', to='organizations.organization')),
                ('user', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='clientuser', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternalClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('website', models.URLField(blank=True, max_length=255)),
                ('domain', models.CharField(blank=True, max_length=255)),
                ('gstin', models.CharField(blank=True, max_length=15)),
                ('pan', models.CharField(blank=True, max_length=10)),
                ('is_signed', models.BooleanField(default=False)),
                ('assigned_to', models.CharField(blank=True, max_length=255)),
                ('address', models.TextField(blank=True, max_length=255)),
                ('organization', models.OneToOneField(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='internal_client', to='organizations.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ClientPointOfContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='IN', unique=True)),
                ('client', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='points_of_contact', to='dashboard.internalclient')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InternalInterviewer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, region='IN', unique=True)),
                ('current_company', models.CharField(blank=True, max_length=255)),
                ('previous_company', models.CharField(blank=True, max_length=255)),
                ('current_designation', models.CharField(blank=True, max_length=255)),
                ('total_experience_years', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Expereince should be more than 1 year'), django.core.validators.MaxValueValidator(50, message='Enter a valid Experience')])),
                ('total_experience_months', models.PositiveSmallIntegerField(default=0)),
                ('interview_experience_years', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Expereince should be more than 1 year'), django.core.validators.MaxValueValidator(50, message='Enter a valid Experience')])),
                ('interview_experience_months', models.PositiveSmallIntegerField(default=0)),
                ('assigned_roles', models.JSONField(blank=True, default=list)),
                ('skills', models.JSONField(blank=True, default=list)),
                ('strength', models.CharField(blank=True, choices=[('backend', 'Backend'), ('frontend', 'Frontend'), ('devops', 'DevOps'), ('testing', 'Strength'), ('aiml', 'AI/ML'), ('data_engineer', 'Data Engineer')], max_length=50)),
                ('cv', models.FileField(blank=True, upload_to='interviewer_cvs')),
                ('organization', models.ManyToManyField(blank=True, related_name='interviewers', to='organizations.organization')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Interview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('status', models.CharField(blank=True, choices=[('REC', 'Recommended'), ('NREC', 'Not Recommended'), ('SCH', 'Schedule'), ('NSCH', 'Not Schedule')], help_text='Interview status', max_length=15)),
                ('date', models.DateTimeField(help_text='Scheduled interview date and time')),
                ('reschedule', models.BooleanField(default=False, help_text='Indicates if the interview has been rescheduled')),
                ('recording', models.FileField(blank=True, help_text='Interview recording file', null=True, upload_to='interview_recordings')),
                ('feedback', models.TextField(blank=True, help_text='Feedback for the candidate', null=True)),
                ('score', models.PositiveSmallIntegerField(default=0)),
                ('total_score', models.PositiveSmallIntegerField(default=0)),
                ('candidate', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='interview', to='dashboard.candidate')),
                ('interivewer', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='interviews', to='dashboard.internalinterviewer')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('archived', models.BooleanField(default=False)),
                ('name', models.CharField(blank=True, max_length=100)),
                ('job_id', models.CharField(blank=True, max_length=100, null=True)),
                ('total_positions', models.PositiveSmallIntegerField(default=0)),
                ('job_description_file', models.FileField(upload_to='job_descriptions')),
                ('mandatory_skills', models.TextField(blank=True)),
                ('interview_time', models.CharField(max_length=50)),
                ('other_details', models.JSONField(blank=True, default=dict)),
                ('reason_for_archived', models.CharField(blank=True, choices=[('PF', 'Postition Filled'), ('POH', 'Position On Hold'), ('OTH', 'Other')], max_length=15, null=True)),
                ('client', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='recruiter', to='dashboard.clientuser')),
                ('hiring_manager', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='hiringmanager', to='dashboard.clientuser')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
