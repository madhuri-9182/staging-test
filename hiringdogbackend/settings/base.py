"""
Django settings for hiringdogbackend project.

Generated by 'django-admin startproject' using Django 5.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
import sys
from datetime import timedelta
from pathlib import Path
from kombu import Exchange, Queue

BASE_DIR = Path(__file__).resolve().parent.parent.parent


INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "django_rest_passwordreset",
    "rest_framework_simplejwt",
    "rest_framework_simplejwt.token_blacklist",
    "phonenumber_field",
    "corsheaders",
    "drf_spectacular",
    "organizations",
    "django_celery_beat",
    "core",
    "dashboard",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "core.middleware.AuthenticationMiddlewareJWT",
    "core.middleware.VerificationMiddleWare",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


ROOT_URLCONF = "hiringdogbackend.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "hiringdogbackend.wsgi.application"


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "Asia/Kolkata"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = "static/"

MEDIA_URL = "media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "media")

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


AUTH_USER_MODEL = "core.User"

SESSION_SAVE_EVERY_REQUEST = True

REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ),
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
    "PAGE_SIZE": 10,
    "EXCEPTION_HANDLER": "core.exceptions.permission_denied_custom_exception_handler",
}


SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(days=1),
    "REFRESH_TOKEN_LIFETIME": timedelta(days=10),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

DJANGO_REST_PASSWORDRESET_NO_INFORMATION_LEAKAGE = True
DJANGO_REST_MULTITOKENAUTH_RESET_TOKEN_EXPIRY_TIME = 1


CELERY_BROKER_CONNECTION_RETRY_ON_STARTUP = True
CELERY_TIMEZONE = "Asia/Kolkata"
CELERY_RESULT_BACKEND = "redis://localhost:6379/0"
CELERY_TASK_TRACK_STARTED = True
CELERY_WORKER_SEND_TASK_EVENTS = True
CELERY_BEAT_SCHEDULER = "django_celery_beat.schedulers.DatabaseScheduler"
CELERY_TASK_ACKS_LATE = True
CELERY_BROKER_HEARTBEAT = 10
# CELERY_BROKER_CONNECTION_TIMEOUT = 600
# CELERY_TASK_TRACK_STARTED = True
# CELERYD_PREFETCH_MULTIPLIER = 2
# CELERY_BROKER_TRANSPORT_OPTIONS = {"visibility_timeout": 3600}
# CELERY_QUEUES = (
#     Queue(
#         "default",
#         Exchange("default"),
#         routing_key="default",
#         durable=True,
#         delivery_mode=2,
#     ),
# )


GOOGLE_CLIENT_SECRET_FILE = os.path.join(BASE_DIR, "resources/client_secret.json")
GOOGLE_SERVICE_ACCOUNT_CRED = os.path.join(
    BASE_DIR, "resources/hiringdog-interview-platform-aaed9eab6a69.json"
)
GOOGLE_REDIRECT_URI = "http://localhost:5173/interviewer/calendar"
GOOGLE_CLIENT_ID = (
    "187041398834-vukvfh0chir8ovqcvu1rh16qe6mrvlp9.apps.googleusercontent.com"
)


APILAYER_RESUME_PARSER_API_KEY = "KcP5hRnkLKxsuh3xSlAkG71xABdqBilD"
APILAYER_RESUME_PARSER_URL = "https://api.apilayer.com/resume_parser/upload"


SPECTACULAR_SETTINGS = {
    "TITLE": "Hiring Dog",
    "DESCRIPTION": "Comprehensive API suite for seamless recruitment and talent management.",
    "VERSION": "v1",
    "SERVE_INCLUDE_SCHEMA": False,
    "TAGS": [
        {
            "name": "Authentication",
            "description": "Endpoints related to Authentication and Authorization",
        },
        {"name": "Client", "description": "Client related endpoints"},
        {"name": "Internal", "description": "Internal related endpoints"},
        {"name": "Interviewer", "description": "Interviewer related endpoints"},
    ],
}


REGEX_GSTIN_BASIC = r"^(?=.*[a-zA-Z])(?=.*\d)[a-zA-Z\d]{15}$"
REGEX_GSTIN = "^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}Z[0-9A-Z]{1}$"
REGEX_PAN = r"^[A-Za-z]{5}[0-9]{4}[A-Za-z]$"
REGEX_PAN_BASIC = r"^(?=.*[a-zA-Z])(?=.*\d)[a-zA-Z\d]{10}$"


LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "formatters": {
        "verbose": {
            "format": "{levelname} {asctime} {module} {message}",
            "style": "{",
        },
        "simple": {
            "format": "{levelname} {message}",
            "style": "{",
        },
    },
    "handlers": {
        "file": {
            "level": "ERROR",
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, "logs", "errors.log"),
            "formatter": "verbose",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "ERROR",
            "propagate": True,
        },
    },
}


LOGGING["handlers"]["mail_admins"] = {
    "level": "ERROR",
    "class": "django.utils.log.AdminEmailHandler",
    "include_html": True,
}

LOGGING["loggers"]["django"]["handlers"].append("mail_admins")
